buildscript {
    ext {
        springBootVersion = '1.4.1.RELEASE'
        kotlinVersion = '1.0.6'
    }

    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath('se.transmode.gradle:gradle-docker:1.2') //docker plugin to build image
        classpath "gradle.plugin.com.gorylenko.gradle-git-properties:gradle-git-properties:1.4.17"
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'spring-boot'
apply plugin: 'docker'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: "com.gorylenko.gradle-git-properties"

jar {
    baseName = 'lunchplace_backend'
    version = '0.0.3'
}
sourceCompatibility = 1.8

group = 'zenika'

repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"

    compile('org.springframework.boot:spring-boot-starter')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-security")

    compile("org.mongodb:mongo-java-driver:3.2.1")
    compile("org.springframework.boot:spring-boot-starter-data-mongodb")

    compile("io.springfox:springfox-swagger-ui:2.6.1")
    compile("io.springfox:springfox-swagger2:2.6.1")

    compile("com.fasterxml.jackson.module:jackson-module-kotlin")

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile(group: 'junit', name: 'junit', version: '4.11')
}


gitProperties {
    gitRepositoryRoot = new File("${project.rootDir}/..")
}

springBoot  {
    buildInfo()
}

task docker(type: Docker, dependsOn: build) {
    push = true
    applicationName = jar.baseName
    maintainer = 'GwennaÃ«l Buchet <gwennael.buchet@gmail.com>'
    dockerfile = file('Dockerfile')
    tagVersion = jar.version
    registry = 'zenika'
    doFirst {
        copy {
            from jar
            into 'build/docker/build/libs/'
        }
    }
}

task writeProjectVersion << {
   new File("build/version.txt").withWriter { out ->
      out.println jar.version
   }
}
